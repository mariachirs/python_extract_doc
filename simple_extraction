from docx import Document
from typing import List, Tuple
import unicodedata

def normalize(text: str) -> str:
    return unicodedata.normalize('NFKC', text.strip().lower())

def extract_languages_from_docx_tables(filepath: str) -> List[Tuple[str, str]]:
    doc = Document(filepath)
    results = []
    extracting = False
    data = []

    for table in doc.tables:
        for row in table.rows:
            cells = [cell.text.strip() for cell in row.cells]
            if not cells:
                continue

            # Flatten the row into a single normalized string for header detection
            row_text = ' '.join(cells).strip()
            norm_text = normalize(row_text)

            if norm_text == normalize("Langues parlées, écrites"):
                extracting = True
                continue

            if extracting:
                # Stop if we hit something that looks like a header or unrelated section
                if "curriculum vitae" in norm_text or any(
                    keyword in norm_text
                    for keyword in ["formation", "certification", "technologies", "publications", "expérience"]
                ):
                    break
                # Append valid content
                for cell in cells:
                    if cell:
                        data.append(cell.strip())

    # Pair: first half is languages, second half is levels
    if len(data) % 2 != 0:
        raise ValueError("Uneven number of language/level entries")

    half = len(data) // 2
    return list(zip(data[:half], data[half:]))
