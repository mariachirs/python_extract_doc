from docx import Document
import unicodedata
from typing import List, Tuple

def normalize(text: str) -> str:
    return unicodedata.normalize('NFKC', text).strip().lower()

def extract_languages_from_cv(filepath: str) -> List[Tuple[str, str]]:
    doc = Document(filepath)
    languages_section_started = False
    lines = []

    stop_keywords = {
        "certifications", "résumé des interventions", "technologies", "perfectionnement",
        "formation académique", "autres formations", "associations", "publications", "conférences données ou suivies",
    }

    for para in doc.paragraphs:
        text = para.text.strip()
        norm = normalize(text)

        if not text:
            continue

        if norm == normalize("Langues parlées, écrites"):
            languages_section_started = True
            continue

        if languages_section_started:
            if any(norm.startswith(h) for h in stop_keywords) or "curriculum vitae" in norm:
                break
            lines.append(text)

    if len(lines) % 2 != 0:
        raise ValueError("Uneven number of lines: unable to reliably pair languages and levels")

    half = len(lines) // 2
    return list(zip(lines[:half], lines[half:]))
