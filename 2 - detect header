=======================================
Start collecting text after the exact match "Associations".

Stop at any new line that looks like a section header, even if it’s not styled as a heading:

Has no punctuation

Is short (2–6 words)

Has capitalized words
========================


import re
from docx import Document


def is_likely_section_header(text: str) -> bool:
    return (
        bool(re.match(r"^[A-Z][A-Za-zÀ-ÿ\\s,'’\-]{2,40}$", text.strip()))
        and len(text.strip().split()) <= 6
    )


def extract_paragraphs_between_headers(doc_path, start_header):
    doc = Document(doc_path)
    collecting = False
    collected_paragraphs = []
    header_style = None

    for para in doc.paragraphs:
        text = para.text.strip()
        style = para.style.name

        if text == start_header:
            collecting = True
            header_style = style
            continue

        if collecting:
            if (style == header_style and text) or is_likely_section_header(text):
                break
            if text:
                collected_paragraphs.append(text)

    return collected_paragraphs


if __name__ == "__main__":
    file_path = "MARTINS_Roni_CV_23-03 (4) (1).docx"
    paragraphs = extract_paragraphs_between_headers(file_path, "Associations")

    print("\n--- Extracted Paragraphs ---\n")
    for p in paragraphs:
        print(p)
