import re
from docx import Document

def is_likely_section_header(text: str) -> bool:
    """
    Heuristic to detect section headers: short, capitalized, no punctuation.
    """
    return (
        bool(re.match(r"^[A-ZÀ-Ÿ][\wÀ-ÿ\s,'’\-]{2,40}$", text.strip()))
        and 1 <= len(text.strip().split()) <= 6
    )

def extract_paragraphs_between_headers(doc_path, start_header):
    """
    Extracts paragraphs between a given header and the next likely section header.
    
    Parameters:
        doc_path (str): Path to the .docx file
        start_header (str): Header text to start extraction from

    Returns:
        list[str]: Extracted paragraph texts
    """
    doc = Document(doc_path)
    collecting = False
    collected = []

    for para in doc.paragraphs:
        text = para.text.strip()

        if not text:
            continue

        # Start collecting when header matches (case-insensitive)
        if text.lower() == start_header.lower():
            collecting = True
            continue

        if collecting:
            if text.lower() != start_header.lower() and is_likely_section_header(text):
                break
            collected.append(text)

    return collected
