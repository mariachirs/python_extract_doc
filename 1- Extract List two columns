from docx import Document
import re

def extract_raw_technology_lines(document):
    raw_lines = []
    start_found = False
    started_matching = False

    header_pattern = re.compile(r'^Technologies\s+Mois\s+Technologies\s+Mois$', re.IGNORECASE)
    tech_pattern = re.compile(r'^(.+?)\s+(\d+)$')

    for table in document.tables:
        for row in table.rows:
            line = '\t'.join(cell.text.strip() for cell in row.cells if cell.text.strip())

            if not start_found:
                if header_pattern.match(line):
                    start_found = True
                continue

            if start_found:
                if tech_pattern.match(line):
                    started_matching = True
                    raw_lines.append(line)
                elif started_matching:
                    # We already collected some valid entries and now hit a non-match
                    return raw_lines
                else:
                    # Before valid entries begin, keep collecting category lines
                    raw_lines.append(line)

    return raw_lines
ðŸ”§ Step 2: Same as before â€” Parse flat list of dictionaries
python
Copier
Modifier
def parse_technology_lines_to_dicts(raw_lines):
    results = []
    current_category = None
    tech_pattern = re.compile(r'^(.+?)\s+(\d+)$')

    for line in raw_lines:
        if not line.strip():
            continue

        match = tech_pattern.match(line)
        if match:
            technologie = match.group(1).strip()
            mois = int(match.group(2))
            results.append({
                "categorie": current_category or "Sans catÃ©gorie",
                "technologie": technologie,
                "mois": mois
            })
        else:
            current_category = line.strip(" :\t")

    return results
